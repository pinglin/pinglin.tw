---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

const pageTitle = 'Blog | pinglin.tw';

const allPosts = await getCollection('blog', ({ data }) => data.lang === Astro.currentLocale);
// const tags = [...new Set(allPosts.map((post: CollectionEntry<'blog'>) => post.data.tags).flat())];

// Group posts by year
const postsByYear = allPosts.reduce(
  (acc: Record<number, CollectionEntry<'blog'>[]>, post: CollectionEntry<'blog'>) => {
    const year = new Date(post.data.pubDate).getFullYear();
    if (!acc[year]) acc[year] = [];
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, CollectionEntry<'blog'>[]>,
);
---

<BaseLayout pageTitle={pageTitle}>
  <ul>
    {
      Object.keys(postsByYear)
        .sort((a, b) => Number(b) - Number(a))
        .map((year) => (
          <div>
            <h2>{year}</h2>
            <ul>
              {postsByYear[year].map(
                (post: {
                  slug: string;
                  data: {
                    title: string;
                    description: string;
                    image: { url: string; alt: string };
                    pubDate: Date;
                  };
                }) => (
                  <BlogPost
                    url={'/blog/' + post.slug}
                    title={post.data.title}
                    description={post.data.description}
                    image={post.data.image}
                    pubDate={post.data.pubDate}
                  />
                ),
              )}
            </ul>
          </div>
        ))
    }
  </ul>
</BaseLayout>
