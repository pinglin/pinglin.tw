---
const lightTheme = 'cmyk';
const darkTheme = 'night';
---

<button
  id="themeToggle"
  class="p-0 bg-transparent border-none cursor-pointer"
  aria-label="Toggle theme"
>
  <div
    class="w-12 h-6 bg-gray-300 dark:bg-gray-600 rounded-full relative flex items-center justify-between px-1 transition-all duration-300"
  >
    <svg class="w-4 h-4 text-white dark:text-yellow-300" aria-hidden="true" viewBox="0 0 24 24">
      <path
        fill="currentColor"
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"
      >
      </path>
    </svg>
    <div
      class="w-5 h-5 bg-white rounded-full absolute top-0.5 left-0.5 transform transition-all duration-300 dark:translate-x-6"
    >
    </div>
    <svg class="w-4 h-4 text-white" aria-hidden="true" viewBox="0 0 24 24">
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"
      >
      </path>
    </svg>
  </div>
  <span class="sr-only">Toggle theme</span>
</button>

<script is:inline define:vars={{ lightTheme, darkTheme }}>
  function toggleTheme() {
    const html = document.documentElement;
    const currentTheme = html.getAttribute('data-theme');
    const newTheme = currentTheme === lightTheme ? darkTheme : lightTheme;

    html.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);

    const toggleButton = document.querySelector('#themeToggle .bg-white');
    toggleButton?.classList.toggle('translate-x-6', newTheme === 'black');
  }

  function attachToggleListener() {
    const themeToggle = document.getElementById('themeToggle');
    if (themeToggle) {
      themeToggle.removeEventListener('click', toggleTheme);
      themeToggle.addEventListener('click', toggleTheme);
    }

    // Set initial toggle position
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const toggleButton = document.querySelector('#themeToggle .bg-white');
    toggleButton?.classList.toggle('translate-x-6', currentTheme === darkTheme);
  }

  // Attach listener when the script runs
  attachToggleListener();

  // Re-attach listener after Astro page transitions
  document.addEventListener('astro:page-load', attachToggleListener);
</script>
